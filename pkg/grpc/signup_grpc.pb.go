// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// NewMemberRegistrationServiceClient is the client API for NewMemberRegistrationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NewMemberRegistrationServiceClient interface {
	Signup(ctx context.Context, in *SignupRequest, opts ...grpc.CallOption) (*SignupResponse, error)
}

type newMemberRegistrationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNewMemberRegistrationServiceClient(cc grpc.ClientConnInterface) NewMemberRegistrationServiceClient {
	return &newMemberRegistrationServiceClient{cc}
}

func (c *newMemberRegistrationServiceClient) Signup(ctx context.Context, in *SignupRequest, opts ...grpc.CallOption) (*SignupResponse, error) {
	out := new(SignupResponse)
	err := c.cc.Invoke(ctx, "/signup.NewMemberRegistrationService/Signup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NewMemberRegistrationServiceServer is the server API for NewMemberRegistrationService service.
// All implementations must embed UnimplementedNewMemberRegistrationServiceServer
// for forward compatibility
type NewMemberRegistrationServiceServer interface {
	Signup(context.Context, *SignupRequest) (*SignupResponse, error)
	mustEmbedUnimplementedNewMemberRegistrationServiceServer()
}

// UnimplementedNewMemberRegistrationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedNewMemberRegistrationServiceServer struct {
}

func (UnimplementedNewMemberRegistrationServiceServer) Signup(context.Context, *SignupRequest) (*SignupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Signup not implemented")
}
func (UnimplementedNewMemberRegistrationServiceServer) mustEmbedUnimplementedNewMemberRegistrationServiceServer() {
}

// UnsafeNewMemberRegistrationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NewMemberRegistrationServiceServer will
// result in compilation errors.
type UnsafeNewMemberRegistrationServiceServer interface {
	mustEmbedUnimplementedNewMemberRegistrationServiceServer()
}

func RegisterNewMemberRegistrationServiceServer(s grpc.ServiceRegistrar, srv NewMemberRegistrationServiceServer) {
	s.RegisterService(&NewMemberRegistrationService_ServiceDesc, srv)
}

func _NewMemberRegistrationService_Signup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NewMemberRegistrationServiceServer).Signup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/signup.NewMemberRegistrationService/Signup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NewMemberRegistrationServiceServer).Signup(ctx, req.(*SignupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// NewMemberRegistrationService_ServiceDesc is the grpc.ServiceDesc for NewMemberRegistrationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NewMemberRegistrationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "signup.NewMemberRegistrationService",
	HandlerType: (*NewMemberRegistrationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Signup",
			Handler:    _NewMemberRegistrationService_Signup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "signup.proto",
}
